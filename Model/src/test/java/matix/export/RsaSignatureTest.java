package matix.export;

import matix.export.Data.RsaKeySet;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;
import matix.export.RsaSignature;
import  matix.export.RsaEncoder;

import java.math.BigInteger;

class RsaSignatureTest {

    @Test
    void baseValidSignatureTest() {
        RsaKeySet keys = RsaEncoder.generateKeys(512);
        byte[] msg = {0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110};
        byte[] signature = RsaSignature.getSignature(msg,keys.getPublicKey());
        assertTrue(RsaSignature.isSignatureValid(msg,signature,keys.getPublicKey()));
    }
    @Test
    void baseInvalidSignatureTest() {
        RsaKeySet keys = RsaEncoder.generateKeys(512);
        byte[] msg = {0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110,0b00000000,0b01010101,0b00001110};
        byte[] signature = RsaSignature.getSignature(msg,keys.getPublicKey());
        msg[0] = 0b01111111;
        assertFalse(RsaSignature.isSignatureValid(msg,signature,keys.getPublicKey()));
    }


}